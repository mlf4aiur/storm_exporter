# Default values for prometheus-storm-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/mlf4aiur/prometheus-storm-exporter
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 9800
  annotations: {}
  labels: {}
    # prometheus.io/path: /metrics
    # prometheus.io/port: "9800"
    # prometheus.io/scrape: "true"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 50m
  #   memory: 64Mi

env:
  storm_ui_host: storm-ui:8080
  refresh_rate: 15

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: false
  interval: 15s
  targets: []
  relabelings: []
  metricRelabelings:
    - sourceLabels: [__name__]
      regex: ^python_.*
      action: drop
    - sourceLabels: [__name__]
      regex: ^process_.*
      action: drop

## Custom PrometheusRules to be defined
## The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart
## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
prometheusRule:
  enabled: false
  additionalLabels: {}
  namespace: ""
  rules: []
    # - alert: StormTopologyRestarted
    #   expr: storm_topology_uptime_seconds < 300
    #   for: 5m
    #   labels:
    #     severity: warning
    #   annotations:
    #     summary: "Storm topology {{ $labels.topology_name }} restarted"
    #     description: "The topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) uptime is less than 5 minutes, indicating a possible restart."

    # - alert: StormTopologyZeroWorkers
    #   expr: storm_topology_workers_total == 0
    #   for: 5m
    #   labels:
    #     severity: critical
    #   annotations:
    #     summary: "Storm topology {{ $labels.topology_name }} has zero workers"
    #     description: "Topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) has no active workers. Check cluster status."

    # - alert: StormTopologyZeroTasks
    #   expr: storm_topology_tasks_total == 0
    #   for: 5m
    #   labels:
    #     severity: critical
    #   annotations:
    #     summary: "Storm topology {{ $labels.topology_name }} has zero tasks"
    #     description: "Topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) has no tasks running."

    # - alert: StormTopologyLowAssignedCPU
    #   expr: storm_topology_assigned_cpu < storm_topology_requested_cpu * 0.8
    #   for: 5m
    #   labels:
    #     severity: warning
    #   annotations:
    #     summary: "Storm topology {{ $labels.topology_name }} CPU allocation low"
    #     description: "Assigned CPU for topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) is below 80% of requested CPU."

    # - alert: StormTopologyLowAssignedMemory
    #   expr: storm_topology_assigned_total_mem < storm_topology_requested_total_mem * 0.8
    #   for: 5m
    #   labels:
    #     severity: warning
    #   annotations:
    #     summary: "Storm topology {{ $labels.topology_name }} memory allocation low"
    #     description: "Assigned memory for topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) is below 80% of requested memory."

    # - alert: StormTopologyHighFailureRate
    #   expr: storm_topology_stats_failed > storm_topology_stats_acked * 0.05
    #   for: 5m
    #   labels:
    #     severity: critical
    #   annotations:
    #     summary: "Storm topology {{ $labels.topology_name }} has a high failure rate"
    #     description: "The topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) has more than 5% message failures."

    # - alert: StormSpoutHighFailureRate
    #   expr: storm_topology_spouts_failed > storm_topology_spouts_acked * 0.05
    #   for: 5m
    #   labels:
    #     severity: critical
    #   annotations:
    #     summary: "Storm spout {{ $labels.spout_id }} in topology {{ $labels.topology_name }} has a high failure rate"
    #     description: "The spout {{ $labels.spout_id }} in topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) has more than 5% failures."

    # - alert: StormBoltHighFailureRate
    #   expr: storm_topology_bolts_failed > storm_topology_bolts_acked * 0.05
    #   for: 5m
    #   labels:
    #     severity: critical
    #   annotations:
    #     summary: "Storm bolt {{ $labels.bolt_id }} in topology {{ $labels.topology_name }} has a high failure rate"
    #     description: "The bolt {{ $labels.bolt_id }} in topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) has more than 5% failures."

    # - alert: StormSpoutHighLatency
    #   expr: storm_topology_spouts_complete_latency > 10000
    #   for: 5m
    #   labels:
    #     severity: warning
    #   annotations:
    #     summary: "Storm spout {{ $labels.spout_id }} in topology {{ $labels.topology_name }} has high latency"
    #     description: "The spout {{ $labels.spout_id }} in topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) has a complete latency greater than 10s."

    # - alert: StormBoltHighProcessLatency
    #   expr: storm_topology_bolts_process_latency > 5000
    #   for: 5m
    #   labels:
    #     severity: warning
    #   annotations:
    #     summary: "Storm bolt {{ $labels.bolt_id }} in topology {{ $labels.topology_name }} has high processing latency"
    #     description: "The bolt {{ $labels.bolt_id }} in topology {{ $labels.topology_name }} (ID: {{ $labels.topology_id }}) has a processing latency greater than 5s."

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
